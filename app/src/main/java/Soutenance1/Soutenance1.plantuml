@startuml

title __SOUTENANCE1's Class Diagram__\n

  namespace Soutenance1 {
    class Soutenance1.App {
        {static} + main()
    }
  }
  

  namespace Soutenance1 {
    interface Soutenance1.CliMessages {
        {static} + actions()
        {static} + attack()
        {static} + bye()
        {static} + captured()
        {static} + chooseName()
        {static} + getAway()
        {static} + hello()
        {static} + magicAttack()
        {static} + missed()
        {static} + noMoreArrows()
        {static} + playerPtimosInfo()
        {static} + pokerandEscapes()
        {static} + pokerandMagicAttack()
        {static} + pokerandWins()
        {static} + ptimosEscapes()
        {static} + ptimosInfo()
        {static} + ptimosToMeet()
        {static} + roar()
        {static} + youLost()
    }
  }
  

  namespace Soutenance1 {
    class Soutenance1.Game {
        {static} # Pokrand : int
        {static} # Pyralia : int
        {static} # Sacbleu : int
        {static} - distance : int
        {static} - input : Scanner
        {static} - player : Player
        {static} - ptimos : Ptimos
        {static} - reaction : String
        {static} - s1 : String
        + Game()
        {static} # getDistance()
        {static} # raiseDistance()
        {static} # reaction()
        {static} # reduceDistance()
        {static} # setDistance()
        {static} # startGame()
        {static} ~ ptimosInTOCage()
        {static} - attackMoreOftenThenGetAway()
        {static} - attackMoreOftenThenMagicOrRoar()
        {static} - attackMoreOftenThenRoar()
        {static} - attackMoreOftenThenRoarAndGetAway()
        - attackOrRoar()
        {static} - attackOrRoarOrGetAway()
        {static} - checkDistance()
        {static} - chooseName()
        {static} - generateDistance()
        {static} - generatePtimos()
        {static} - getAwayMoreOftenThanRoarAndAttack()
        {static} - getAwayOrAttackMoreOftenThenRoar()
        {static} - magicAttackPossible()
        {static} - messageAfterReaction()
        {static} - reactionIfDistancMedium()
        {static} - reactionIfDistanceLarge()
        {static} - reactionIfDistanceShort()
        {static} - roarAttackOrMagic()
        {static} - roarMoreOftenThenAttack()
        {static} - roarMoreOftenThenAttackAndGetAway()
        {static} - roarMoreOftenThenGetAway()
    }
  }
  

  namespace Soutenance1 {
    interface Soutenance1.Helpers {
        {static} + probabilityHigh()
        {static} + probabilityLow()
        {static} + probabilityTwoToOne()
        {static} + randomValue()
        {static} + reduceStressWithTreat()
    }
  }
  

  namespace Soutenance1 {
    class Soutenance1.Player {
        ~ arrow : int
        ~ cages : int
        {static} ~ life : int
        ~ name : String
        ~ treats : int
        + approach()
        + arrow()
        + dance()
        + observer()
        + treat()
        {static} # getLife()
        {static} # reduceLife()
        {static} # setLife()
        ~ Player()
    }
  }
  

  namespace Soutenance1 {
    class Soutenance1.Pokrand {
        + dominanceLevel()
        + stressLevel()
        # magic()
        ~ Pokrand()
        {static} - cardsResultReaction()
    }
  }
  

  namespace Soutenance1 {
    abstract class Soutenance1.Ptimos {
        {static} # dominance : int
        # stress : int
        + attack()
        + getDominance()
        + getStress()
        + roar()
        {static} # commonMagic()
        # escape()
        # getAway()
        # getDominanceNum()
        # getStressNum()
        # limitStress()
        # magic()
        # raiseDominance()
        # raiseStress()
        {static} # reduceDominance()
        # reduceStress()
        # setDominance()
        # setStress()
        ~ Ptimos()
        {abstract} ~ dominanceLevel()
        {abstract} ~ stressLevel()
        - limitDominance()
    }
  }
  

  namespace Soutenance1 {
    class Soutenance1.PtimosFactory {
        {static} + createPtimos()
    }
  }
  

  namespace Soutenance1 {
    class Soutenance1.Pyralia {
        + dominanceLevel()
        + stressLevel()
        ~ Pyralia()
    }
  }
  

  namespace Soutenance1 {
    class Soutenance1.Sacbleu {
        + Sacbleu()
        + dominanceLevel()
        + stressLevel()
        # getStressNum()
    }
  }
  

  Soutenance1.Game .up.|> Soutenance1.CliMessages
  Soutenance1.Player .up.|> Soutenance1.Helpers
  Soutenance1.Pokrand -up-|> Soutenance1.Ptimos
  Soutenance1.PtimosFactory .up.|> Soutenance1.Helpers
  Soutenance1.Pyralia -up-|> Soutenance1.Ptimos
  Soutenance1.Sacbleu .up.|> Soutenance1.Helpers
  Soutenance1.Sacbleu -up-|> Soutenance1.Ptimos


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
